{"version":3,"file":"vue.js","sources":["../src/compiler/index.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\n\n//vue3采用的不是正则\n// 对模板进行编译处理\nfunction parseHTML (html) { // vue2中 html最开始肯定是一个<\n\n  const ELEMENT_TYPE = 1\n  const TEXT_TYPE = 3\n  const stack = []\n  let currentParent // 指向的是栈中的最后一个\n  let root\n\n  //最终要转换成一颗抽象语法树\n\n  function createASTElement (tag, attrs) {\n    return {\n      tag,\n      type: ELEMENT_TYPE,\n      attrs,\n      parent: null,\n      children: []\n    }\n  }\n\n  // 你用栈结构 去构造一棵树\n  function start (tag, attrs) {\n    let node = createASTElement(tag, attrs) //创造一个ast节点\n    if (!root) { // 看看是否为空数\n      root = node  // 将当前节点当成树的根节点\n    }\n\n    if (currentParent) {\n      node.parent = currentParent\n      currentParent.children.push(node) // 还需要父亲记住自己\n    }\n    stack.push(node)\n    currentParent = node // currentParent为栈中最后一个\n    console.log(tag, attrs, '开始');\n  }\n\n  function chars (text) { // 文本直接放到当前指向的节点\n    text = text.replace(/\\s/g, '')\n    text && currentParent.children.push({\n      type: TEXT_TYPE,\n      text,\n      parent: currentParent\n    })\n    console.log(text, '文本');\n  }\n\n  function end (tag) {\n    stack.pop() //弹出最后一个\n    currentParent = stack.at(-1)\n    console.log(tag, '结束');\n\n  }\n\n\n  function advance (n) {\n    // console.log(html);\n    html = html.substring(n)\n  }\n  function parseStartTag () {\n    const start = html.match(startTagOpen)\n    // console.log(start);\n    if (start) {\n      const match = {\n        tagName: start[1], //标签名\n        attrs: []\n      }\n      advance(start[0].length)\n\n      //如果不是开始标签的结束/>并且标签上还有属性 就一直匹配下去\n      let attrs, end\n      while (!(end = html.match(startTagClose)) && (attrs = html.match(attribute))) {\n        advance(attrs[0].length)\n        match.attrs.push({\n          name: attrs[1],\n          value: attrs[3] || attrs[4] || attrs[5]\n        })\n      }\n      // console.log(match);\n      //去除>结束标签\n      if (end) {\n        advance(end[0].length)\n      }\n      // console.log(html);\n      return match\n    }\n\n    return false //不是开始标签\n  }\n\n\n  while (html) {\n    // 如果textEnd为0 这是开始或者结束标签\n    // 如果>0 说明是文本的结束位置\n    let textEnd = html.indexOf('<') // 如果indexOf中的索引是0,说明是一个标签\n    if (textEnd === 0) {\n      const startTagMatch = parseStartTag() //开始标签的匹配结果\n      if (startTagMatch) {\n        start(startTagMatch.tagName, startTagMatch.attrs)\n        continue\n      }\n\n      const endTagMatch = html.match(endTag)  //处理结束标签 </xxx>\n      if (endTagMatch) {\n        advance(endTagMatch[0].length)\n        end(endTagMatch[1])\n        continue\n      }\n\n    }\n    if (textEnd > 0) { //去除<之后说明有文本了\n      let text = html.substring(0, textEnd)\n      if (text) {\n        chars(text)\n        advance(text.length)\n      }\n\n    }\n\n  }\n  console.log(html);\n  console.log(root);\n}\n\n\n\nexport function compileToTFunction (template) {\n  // 1.将template转换成ast语法树\n  let ast = parseHTML(template)\n\n  // 2.生成render函数 (render方法执行的返回的结果就是虚拟dom)\n\n  console.log(template);\n}","let oldArrayProto = Array.prototype\n\n\nexport let newArrayProto = Object.create(oldArrayProto)\n\n\nlet methods = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'reverse',\n  'sort'\n]\n\nmethods.forEach(method => {\n  newArrayProto[method] = function (...args) {  // 重写了数组的方法\n\n    const result = oldArrayProto.call(this, ...args)  //内部调用原来的方法\n\n    //我们需要对新增的数据再进行劫持\n    let inserted\n    const ob = this.__ob__\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args\n        break;\n      case 'splice':\n        inserted = args.slice(2)\n        break\n      default:\n        break;\n    }\n    if (inserted) {//如果有新增的数据 再对他进行劫持\n      ob.observeArray(inserted)\n    }\n    console.log('新增的内容');\n    return result\n  }\n})","import { newArrayProto } from \"./array\"\n\nclass Observer {\n  constructor(data) {\n    // object.defineProperty只能劫持已经存在的属性,后增($set)的或者删除($delete)的不会影响\n\n    // 这样不仅给data增加了新的法法,还给数据加了一个标识 如果有这个就说明已经被观察过了\n    Object.defineProperty(data, '__ob__', {\n      value: this,\n      enumerable: false //防止被循环引用\n    })\n\n    if (Array.isArray(data)) {\n\n      //去重写数组的原型\n      Object.setPrototypeOf(data, newArrayProto)\n\n      // 如果数组中放的是对象 也让他去检测到\n      this.observeArray(data)\n    } else {\n      this.walk(data)\n    }\n  }\n  walk (data) { // 循环对象 对属性依次劫持\n    // \"重新定义\"属性 所以性能很差\n    Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\n  }\n  observeArray (data) {\n    data.forEach(item => observe(item))\n  }\n}\n\nexport function defineReactive (data, key, value) {  //这个函数是一个闭包\n  observe(value) //递归检测 直到是一个简单数据类型为止\n  Object.defineProperty(data, key, {\n    get () {\n      return value\n    },\n    set (newValue) {\n      if (newValue === value) return\n      observe(newValue) //赋值的时候再去做一个递归\n      value = newValue\n    }\n  })\n}\n\nexport function observe (data) {\n  //只对对象和数组进行劫持\n  if (typeof data !== 'object' || data === null) return\n\n  if (data.__ob__ instanceof Observer) { //说明这个对象被代理过了\n    return data.__ob__\n  }\n\n  //标记该对象是否被劫持过(要判断一个对象是否被劫持过,可以添加一个实例,用实例来判断是否被劫持过)\n  return new Observer(data)\n\n}","import { observe } from \"./observe/index\"\n\nexport function initState (vm) {\n  const opts = vm.$options\n  // if (opts.props) {\n  //   initProps()\n  // }\n  if (opts.data) {\n    initData(vm)\n  }\n}\n\nfunction proxy (vm, target, key) {\n  Object.defineProperty(vm, key, {\n    get () {\n      return vm[target][key]\n    },\n    set (newValue) {\n      // if (newValue === vm[target][key]) return\n      vm[target][key] = newValue\n    }\n  })\n}\n\nfunction initData (vm) {\n  let data = vm.$options.data\n  data = typeof data === 'function' ? data.call(vm) : data\n\n  vm._data = data\n  observe(data)\n\n  // 将vm._data 用vm来代理就可以了\n  for (const key in data) {\n    if (Object.hasOwnProperty.call(data, key)) {\n      proxy(vm, '_data', key)\n    }\n  }\n}","import { compileToTFunction } from './compiler'\nimport { initState } from './state'\n\n\nexport function initMixin (Vue) {  // 给vue真假init方法\n  Vue.prototype._init = function (options) { //用于初始化操作\n    const vm = this\n    // v,.$options  就是获取用户的配置\n    vm.$options = options\n\n    //初始化状态\n    initState(vm)\n\n    if (options.el) {\n      vm.$mount(options.el) //实现数据的挂载\n    }\n  }\n\n  Vue.prototype.$mount = function (el) {\n    const vm = this\n    el = document.querySelector(el)\n    let ops = vm.$options\n    if (!ops.render) {  // 先去查找有没有render,没有render再去查是否写了template,没写template,再才采取外部template\n      let template\n      if (!ops.template && el) { //没有写模板 但是写了el\n        template = el.outerHTML\n      } else {\n        if (el) {\n          template = ops.template\n        }\n      }\n      if (template) {\n        // 对模板进行编译\n        const render = compileToTFunction(template)\n        ops.render = render\n      }\n\n\n      // script标签如果引用的是vue.global.js 这个编译过程是在浏览器端的\n      // runtime是不包括把模板编译的,这个编译打包的过程是放在loader去转译.vue文件的,用runtime的时候不能使用template标签\n\n    }\n  }\n}\n\n\n","import { initMixin } from './init'\n\n\n\nfunction Vue (options) {\n  this._init(options)\n}\n\ninitMixin(Vue) // 扩展了init方法\n\n\nexport default Vue"],"names":["ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","parent","children","start","node","push","console","log","chars","text","replace","end","pop","at","advance","n","substring","parseStartTag","match","tagName","length","name","value","textEnd","indexOf","startTagMatch","endTagMatch","compileToTFunction","template","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","args","result","call","inserted","ob","__ob__","slice","observeArray","Observer","data","defineProperty","enumerable","isArray","setPrototypeOf","walk","keys","key","defineReactive","item","observe","get","set","newValue","initState","vm","opts","$options","initData","proxy","target","_data","hasOwnProperty","initMixin","Vue","_init","options","el","$mount","document","querySelector","ops","render","outerHTML"],"mappings":"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"}