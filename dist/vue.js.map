{"version":3,"file":"vue.js","sources":["../vdom/index.js","../vdom/patch.js","../src/compiler/parse.js","../src/compiler/index.js","../src/utils.js","../src/globalAPI.js","../src/observe/dep.js","../src/observe/watcher.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["// h() _c()\n\nexport function createElementVNode (vm, tag, data = {}, ...children) {\n  data ||= {}\n  let key = data.key\n  if (key) delete data.key\n  return vnode(vm, tag, key, data, children)\n}\n\n//_v()\nexport function createTextVNode (vm, text) {\n  return vnode(vm, undefined, undefined, undefined, undefined, text)\n}\n\n\n// ast一样?? ast做的是语法层面的转换  描述的是语法本身\n// 我们的虚拟dom 是描述的dom元素,可以增加一些自定义的属性\nfunction vnode (vm, tag, key, data, children, text) {\n  return {\n    vm,\n    tag,\n    key,\n    data,\n    children,\n    text\n  }\n}\n\n\n\nexport function isSameVnode (vnode1, vnode2) {\n  return vnode1.tag === vnode2.tag && vnode1.key === vnode2.key\n\n}\n","import { isSameVnode } from \".\"\n\nexport function createElm (vnode) {\n  let { tag, data, children, text } = vnode\n  if (typeof tag === 'string') {\n    vnode.el = document.createElement(tag) // 这里将真实节点与虚拟节点对应起来,后续如果修改属性,可以通过虚拟节点修改真实节点\n\n    patchProps(vnode.el, {}, data)\n\n    children.forEach(child => {\n      vnode.el.appendChild(createElm(child))\n    })\n  } else {\n    vnode.el = document.createTextNode(text)\n  }\n  return vnode.el\n}\n\nexport function patchProps (el, oldProps = {}, props = {}) {\n  // console.log(oldProps, props);\n  // 老的属性中有,新的没有 要删除老的 \n  let oldStyles = oldProps.style || {}\n  let newStyles = props.style || {}\n  for (const key in oldStyles) { // 老的样式中有 新的样式没有 则删除\n    if (!newStyles[key]) {\n      el.style[key] = ''\n    }\n  }\n\n  for (const key in oldProps) { // 老的属性中有 新的属性没有 则删除\n    if (!props[key]) {\n      el.removeAttribute(key)\n    }\n  }\n\n  for (const key in props) {  // 用老的覆盖新的\n    if (key === 'style') {\n      for (const styleName in props.style) {\n        el.style[styleName] = props.style[styleName]\n      }\n    } else {\n      el.setAttribute(key, props[key])\n    }\n  }\n}\n\nexport function patch (oldVNode, vnode) {\n  //写的出渲染流程\n  const isRealElement = oldVNode.nodeType\n  if (isRealElement) {\n    const elm = oldVNode // 获取真实元素\n    const parentElm = elm.parentNode // 拿到父元素\n    const newElm = createElm(vnode)\n    parentElm.insertBefore(newElm, elm.nextSibling)\n    parentElm.removeChild(elm)\n    return newElm\n  } else {\n    //diff算法\n    // 1. 两个节点不是同一个节点 (直接删除老的,换成新的,不用比对了)\n    // 2. 两个节点是同个节点(判断节点的tag和节点的key(如果不存在就是undefined 就是相等的)) 在 比较两个节点的属性是否有差异(复用老的节点,更改差异的属性)\n    // 3. 节点比较完成之后,就要比较节点的儿子\n    return patchVnode(oldVNode, vnode)\n\n  }\n}\n\n\nfunction patchVnode (oldVNode, vnode) {\n  if (!isSameVnode(oldVNode, vnode)) { // 不是相同的节点\n    // 用老节点的父亲 进行替换\n    let el = createElm(vnode)\n    oldVNode.el.parentNode.replaceChild(el, oldVNode.el)\n    return el\n  }\n\n  // 文本的情况 文本我们期望比较一下文本的内容\n  let el = vnode.el = oldVNode.el // 复用老节点的元素\n  if (!oldVNode.tag) { // 是文本\n    if (oldVNode.text !== vnode.text) {\n      oldVNode.el.textContent = vnode.text // 用新的文本去覆盖掉老的\n    }\n  }\n\n  // 是标签  我们需要比对标签的属性\n  patchProps(el, oldVNode.data, vnode.data)\n\n  // 比较儿子节点  比较的时候\n  // 1. 一方有儿子  一方没有儿子\n  // 2. 两方都有儿子\n\n  let oldChildren = oldVNode.children || []\n  let newChildren = vnode.children || []\n\n  // console.log(oldChildren, newChildren);\n\n  if (oldChildren.length > 0 && newChildren.length > 0) {\n    // 完整的diff算法  需要比较两个人的儿子\n    updateChildren(el, oldChildren, newChildren)\n\n  } else if (newChildren.length > 0) { // 没有老的,有新的\n    mountChildren(el, newChildren)\n  } else if (oldChildren.length > 0) { // 新的没有 老的有 要删除\n    unMountChildren(el)\n\n  }\n\n\n}\n\n\nfunction mountChildren (el, newChildren) {\n  for (let i = 0; i < newChildren.length; i++) {\n    const child = newChildren[i];\n    el.appendChild(createElm(child))\n  }\n}\n\n\nfunction unMountChildren (el) {\n  el.innerText = ''\n  let child = el.lastElementChild;\n  while (child) {\n    el.removeChild(child);\n    child = el.lastElementChild;\n  }\n}\n\nfunction updateChildren (el, oldChildren, newChildren) {\n  // 我们操作列表  经常会有push shift pop unshift  reverse sort  所以我们对这类情况进行优化\n  // vue2中采用双指针的方式,比较两个节点\n  let oldStartIndex = 0\n  let newStartIndex = 0\n  let oldEndIndex = oldChildren.length - 1\n  let newEndIndex = newChildren.length - 1\n\n  let oldStartVnode = oldChildren[0]\n  let newStartVnode = newChildren[0]\n\n  let oldEndVnode = oldChildren[oldEndIndex]\n  let newEndVnode = newChildren[newEndIndex]\n\n\n  function makeIndexByKey (children) {\n    let map = {}\n    children.forEach((child, index) => {\n      map[child.key] = index\n    })\n    return map\n  }\n\n  let map = makeIndexByKey(oldChildren)\n\n  console.log(map);\n\n  while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\n    // 双方有一方头指针大于尾指针 则停止循环\n\n    if (!oldStartVnode) {\n      oldStartVnode = oldChildren[++oldStartIndex]\n    } else if (!oldEndVnode) {\n      oldEndVnode = oldChildren[--oldEndIndex]\n    } else if (isSameVnode(oldStartVnode, newStartVnode)) {\n      patchVnode(oldStartVnode, newStartVnode) // 如果是相同节点,则递归比较子节点\n      oldStartVnode = oldChildren[++oldStartIndex]\n      newStartVnode = newChildren[++newStartIndex]\n      // 比较开头节点\n    } else if (isSameVnode(oldEndVnode, newEndVnode)) {\n      patchVnode(oldEndVnode, newEndVnode) // 如果是相同节点,则递归比较子节点\n      oldEndVnode = oldChildren[--oldEndIndex]\n      newEndVnode = newChildren[--newEndIndex]\n      // 比较结尾节点\n    } else if (isSameVnode(oldEndVnode, newStartVnode)) {// 交叉比对  abcd => dcba   头比尾\n      patchVnode(oldEndVnode, newStartVnode)\n      // insertBefore 具备移动性  会将原来的元素移动走\n      el.insertBefore(oldEndVnode.el, oldStartVnode.el) // 将老的尾巴移到老的前面去\n      oldEndVnode = oldChildren[--oldEndIndex]\n      newStartVnode = newChildren[++newStartIndex]\n\n    } else if (isSameVnode(oldStartVnode, newEndVnode)) {// 交叉比对  abcd => bcda  尾比头\n      patchVnode(oldStartVnode, newEndVnode)\n      // insertBefore 具备移动性  会将原来的元素移动走\n      el.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling)\n      oldStartVnode = oldChildren[++oldStartIndex]\n      newEndVnode = oldChildren[--newEndIndex]\n    } else {\n      // 乱序比对\n      // 根据老的列表做一个映射关系,用新的去找,找到则移动,找不到则添加,最后多余的就删除\n      let moveIndex = map[newStartVnode.key] // 如果拿到就说明是我要移动的索引\n      if (moveIndex !== undefined) {\n        let moveVnode = oldChildren[moveIndex] // 找到对应的虚拟节点 复用\n        el.insertBefore(moveVnode.el, oldStartVnode.el)\n        oldChildren[moveIndex] = undefined // 表示这个节点被移走了\n        patchVnode(oldStartVnode, newEndVnode) // 比对属性和子节点\n      } else {\n        // 找不到 直接创建一个节点直接插入\n        el.insertBefore(createElm(newStartVnode), oldStartVnode.el)\n      }\n      newStartVnode = newChildren[++newStartIndex]\n    }\n\n\n  }\n  // 再给动态列表添加key的时候, 要尽量避免用索引 因为索引都是从0 开始的  所以可能会发成错误复用,增加性能损耗\n\n\n  if (newStartIndex <= newEndIndex) {  // 新入的多余的插进去\n    for (let i = newStartIndex; i <= newEndIndex; i++) {\n      const childEl = createElm(newChildren[i])\n\n      // 这里面可能是向后追加 也可能是向前追加\n      let anchor = newChildren[newEndIndex + 1] ? newChildren[newEndIndex + 1].el : null // 获取下一个元素\n      el.insertBefore(childEl, anchor) // anchor 为null的时候则认为是appendChild\n    }\n  }\n\n  if (oldStartIndex <= oldEndIndex) {  // 老的多余的删除掉\n    for (let i = oldStartIndex; i <= oldEndIndex; i++) {\n      if (oldChildren[i]) {\n        const childEl = oldChildren[i].el\n        el.removeChild(childEl)\n      }\n    }\n  }\n\n\n\n  // 我们为了比较两个儿子的时候,提升性能,会有一些优化手段\n\n\n  console.log(oldStartVnode, newStartVnode, oldEndVnode, newEndVnode);\n\n}\n\n// 如果批量向页面中修改出入内容 浏览器会自动优化  不用createDocumentFragment\n\n\n\n\n\n\n\n\n\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >\n\n\n\n//vue3采用的不是正则\n// 对模板进行编译处理\nexport function parseHTML (html) { // vue2中 html最开始肯定是一个<\n  const ELEMENT_TYPE = 1\n  const TEXT_TYPE = 3\n  const stack = []\n  let currentParent // 指向的是栈中的最后一个\n  let root\n\n  while (html) {\n    // 如果textEnd为0 这是开始或者结束标签\n    // 如果>0 说明是文本的结束位置\n    let textEnd = html.indexOf('<') // 如果indexOf中的索引是0,说明是一个标签\n    if (textEnd === 0) {\n      const startTagMatch = parseStartTag() //开始标签的匹配结果\n      if (startTagMatch) {\n        start(startTagMatch.tagName, startTagMatch.attrs)\n        continue\n      }\n\n      const endTagMatch = html.match(endTag)  //处理结束标签 </xxx>\n      if (endTagMatch) {\n        advance(endTagMatch[0].length)\n        end(endTagMatch[1])\n        continue\n      }\n    }\n    if (textEnd > 0) { //去除<之后说明有文本了\n      let text = html.substring(0, textEnd)\n      if (text) {\n        chars(text)\n        advance(text.length)\n      }\n\n    }\n\n  }\n\n  //最终要转换成一颗抽象语法树\n\n  function createASTElement (tag, attrs) {\n    return {\n      tag,\n      type: ELEMENT_TYPE,\n      attrs,\n      parent: null,\n      children: []\n    }\n  }\n\n  // 你用栈结构 去构造一棵树\n  function start (tag, attrs) {\n    let node = createASTElement(tag, attrs) //创造一个ast节点\n    if (!root) { // 看看是否为空数\n      root = node  // 将当前节点当成树的根节点\n    }\n\n    if (currentParent) {\n      node.parent = currentParent\n      currentParent.children.push(node) // 还需要父亲记住自己\n    }\n    stack.push(node)\n    currentParent = node // currentParent为栈中最后一个\n    console.log(tag, attrs, '开始');\n  }\n\n  function chars (text) { // 文本直接放到当前指向的节点\n    text = text.replace(/\\s/g, '')\n    text && currentParent.children.push({\n      type: TEXT_TYPE,\n      text,\n      parent: currentParent\n    })\n    console.log(text, '文本');\n  }\n\n  function end (tag) {\n    stack.pop() //弹出最后一个\n    currentParent = stack.at(-1)\n    console.log(tag, '结束');\n\n  }\n\n\n  function advance (n) {\n    html = html.substring(n)\n  }\n\n  function parseStartTag () {\n    const start = html.match(startTagOpen)\n    // console.log(start);\n    if (start) {\n      const match = {\n        tagName: start[1], //标签名\n        attrs: []\n      }\n      advance(start[0].length)\n\n      //如果不是开始标签的结束/>并且标签上还有属性 就一直匹配下去\n      let attrs, end\n      while (!(end = html.match(startTagClose)) && (attrs = html.match(attribute))) {\n        advance(attrs[0].length)\n        match.attrs.push({\n          name: attrs[1],\n          value: attrs[3] || attrs[4] || attrs[5]\n        })\n      }\n      // console.log(match);\n      //去除>结束标签\n      if (end) {\n        advance(end[0].length)\n      }\n      // console.log(html);\n      return match\n    }\n\n    return false //不是开始标签\n  }\n\n  return root\n}\n","import { parseHTML } from \"./parse\";\n\nfunction genProps (attrs) {\n  let str = ''\n  for (let o = 0; o < attrs.length; o++) {\n    const attr = attrs[o];\n    if (attr.name === 'style') {\n      let obj = {}\n      attr.value.split(';').forEach(item => {\n        const [key, value] = item.split(':')\n        obj[key] = value\n      })\n      attr.value = obj\n    }\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\n  }\n  return `{${str.slice(0, -1)}}`\n}\n\nfunction genChildren (children) {\n  if (children) return `${children.map(c => gen(c)).join(',')}`\n}\n\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g  // 匹配{{xxxx}}\nfunction gen (node) {\n  if (node.type == 1) {\n    return genCode(node);\n  } else {\n    let text = node.text\n    if (!defaultTagRE.test(text)) {\n      return `_v(${JSON.stringify(text)})`\n    }\n    let lastIndex = defaultTagRE.lastIndex = 0\n    let tokens = [];\n    let match, index;\n    // console.log(text);\n    while (match = defaultTagRE.exec(text)) {\n      index = match.index;\n      if (index > lastIndex) {\n        tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n      }\n      // console.log(index, lastIndex);\n      tokens.push(`_s(${match[1].trim()})`)\n      lastIndex = index + match[0].length;\n    }\n    if (lastIndex < text.length) {\n      tokens.push(JSON.stringify(text.slice(lastIndex)))\n    }\n    return `_v(${tokens.join('+')})`;\n  }\n}\n\nfunction genCode (ast) {\n  let children = genChildren(ast.children)\n  let code = `_c('${ast.tag}',${ast.attrs.length ? `${genProps(ast.attrs)}` : 'undefined'\n    }${children ? `,${children}` : ''\n    })`;\n  return code;\n}\n\nexport function compileToTFunction (template) {\n  // 1.将template转换成ast语法树\n  let ast = parseHTML(template)\n  // console.log('template:', template);\n\n  console.log('ast:', ast);\n  // 2.生成render函数 (render方法执行的返回的结果就是虚拟dom)\n  let code = genCode(ast) //生成render函数的字符串 \"_c('li',{style:{\"color\":\"yellow\"}},_v(_s(name)),_c('div',undefined,_v(\"11\"),_c('div',undefined)))\"\n  code = `with(this){return ${code}}`\n  let render = new Function(code)\n  // console.log('render函数:', render);\n  // console.log(render.toString());\n  // console.log(template);\n  return render\n}","const strats = {}\nconst LIFECYCLE = [\n  'beforeCreate',\n  'created'\n]\nLIFECYCLE.forEach(hook => {\n  strats[hook] = function (p, c) {\n    // {}  {created:function(){}}  = >   {created:[fn]}\n    // {created:[fn]} {created:function(){}}  =>  {created:[fn,fn]}\n    if (c) {  // 如果儿子有 父亲有 则合并起来, 否则返回一个数组里面只有儿子\n      if (p) {\n        return p.concat(c)\n      } else {\n        return [c]\n      }\n    } else {\n      return p\n    }\n  }\n})\n\n\nexport function mergeOptions (parent, child) {\n  // console.log(parent);\n  const options = {}\n  for (const key in parent) {\n    mergeFiled(key)\n  }\n  for (const key in child) {\n    if (!parent.hasOwnProperty(key)) {\n      mergeFiled(key)\n    }\n  }\n  function mergeFiled (key) {\n    // 用策略模式,减少if else\n    if (strats[key]) {\n      options[key] = strats[key](parent[key], child[key])\n    } else {\n      //如果不在策略中优先采用儿子的,再采用父亲\n      options[key] = child[key] || parent[key]\n    }\n  }\n  return options\n}\n","import { mergeOptions } from \"./utils\"\n\nexport function initGlobalAPI (Vue) {\n  // 静态方法\n  Vue.options = {}\n\n  Vue.mixin = function (mixin) {\n    // 我们期望将用户逇选项和全局的options进行合并\n    this.options = mergeOptions(this.options, mixin)\n    return this // 期望可以链式调用\n  }\n}\n\n\n\n","let id = 0\n\nclass Dep {\n  constructor() {\n    this.id = id++ // 属性的dep需要去收集watcher\n    this.subs = [] // 这里面存放着当前属性对应的watcher\n  }\n  depend () {\n    // 这里面我们不希望放置重复的watcher\n    // 并且我们要watcher记录dep\n    // this.subs.push(Dep.target) // 这么写当重复取一个值的时候,会收集重复的watcher\n\n    Dep.target.addDep(this) // 让watcher去记住dep\n    // debugger\n    // dep和watcher是一个多对多的关系(一个属性在多个组件中可以dep=>多个watcher)\n    // 一个组件中由多个属性组成 (一个watcher对应多个dep)\n  }\n  addSub (watcher) {\n    this.subs.push(watcher)\n  }\n  notify () {\n    this.subs.forEach(watcher => watcher.update()) // 告诉watcher更新了\n  }\n}\n\nDep.target = null\n\nlet stack = []\n\nexport function pushTarget (watcher) {  // 渲染完入栈\n  stack.push(watcher)\n  Dep.target = watcher\n}\n\nexport function popTarget () { // 渲染完出栈\n  stack.pop()\n  Dep.target = stack.at(-1)\n}\n\nexport default Dep","import Dep, { popTarget, pushTarget } from \"./dep\"\n\nlet id = 0  //不同的组件有不同的watcher\n\n// 1) 但我们创建渲染watcher的时候,我们会把当前watcher的实例放在Dep.target上面\n// 2) 调用_render() 会取值走到get上\n\n\n// 每个属性有一个dep(属性就是被观察者), watcher就是观察者(属性变化了就通知观察者来更新) ==> 观察者模式\n\n\nclass Watcher {\n  constructor(vm, exprOrFn, options, cb) {\n    this.vm = vm\n    this.id = id++\n    this.renderWatcher = options // 标识是一个渲染watcher\n\n    if (typeof exprOrFn === 'string') {\n      this.getter = function () {\n        return vm[exprOrFn]\n      }\n    } else {\n      this.getter = exprOrFn // getter 意味着调用这个函数会发生取值操作\n    }\n    this.deps = [] // (组件卸载的时候,清除所有的响应式数据,和用到一些计算属性会用到)\n    this.depsId = new Set() // 用来去重dep\n    this.lazy = options.lazy\n    this.dirty = this.lazy // 缓存值\n    this.cb = cb // watch api用的\n    this.user = options.user // 用户标识是不是用户自己的watcher\n\n    this.value = this.lazy ? undefined : this.get()\n  }\n  evaluate () {\n    this.value = this.get() // 获取到用户函数的返回值,并且还要标识为脏值\n    this.dirty = false\n\n  }\n  get () {\n    // Dep.target = this \n    pushTarget(this) // 静态属性只有一份\n    const value = this.getter.call(this.vm) // 会从vm上去取值,这时候让正常的Observer去收集计算属性watcher,如果是渲染watcher这个就是_update(vm,_render())\n    // Dep.target = null \n    popTarget() // 渲染完毕之后清空(避免在js中调用值被收集watcher)\n    return value\n  }\n\n  addDep (dep) { // 一个组件对应着多个属性 重复的属性也不用记录\n    let id = dep.id\n    if (!this.depsId.has(id)) {\n      this.deps.push(dep)\n      this.depsId.add(id)\n      dep.addSub(this)  // watcher已经记住dep 并且去重了 此时也让dep记住watcher\n    }\n  }\n  depend () {\n    let i = this.deps.length\n    console.log('deps:', this.deps);\n    while (i--) {\n      // dep去收集watcher\n      this.deps[i].depend() // 让计算属性watcher也收集渲染watcher\n    }\n  }\n  update () {\n    if (this.lazy) {\n      // 如果计算属性变化了,则将它重新标为脏值\n      this.dirty = true\n    } else {\n      // console.log('update');\n      // this.get() // 重新渲染\n      queueWatcher(this) // 把当前的watcher暂存起来\n    }\n  }\n  run () {\n    let oldValue = this.value\n    let newValue = this.get() // 渲染的时候用最新的vm来渲染\n    if (this.user) {\n      this.cb.call(this.vm, newValue, oldValue)\n    }\n  }\n\n}\n\n\n\nlet queue = []\nlet has = {}\nlet pending = false // 防抖\n\nfunction flushSchedulerQueue () {\n  let flushQueue = queue.slice(0)\n  pending = false\n  queue = []\n  has = {}\n  flushQueue.forEach(q => q.run()) // 在刷新的过程中可能还有新的watcher,重新放到queue中\n}\n\nfunction queueWatcher (watcher) {\n  let id = watcher.id\n  if (!has[id]) {\n    queue.push(watcher)\n    has[id] = true\n    // 不管update执行多少次  但是最终只执行一轮刷新操作\n    if (!pending) {\n      nextTick(flushSchedulerQueue, 0);\n      pending = true\n    }\n  }\n}\n\nlet callbacks = []\nlet waiting = false\nfunction flushCallBacks () {\n  waiting = false\n  let cbs = callbacks.slice(0)\n  callbacks = []\n  cbs.forEach(cb => cb())\n}\n\n// nextTick 没有直接使用某个API 而是采用优雅降级的方式(vue3直接用promise)\n// 内部先采用的是promise (IE不兼容) 然后降级到MutationObserve(H5的方法) 然后可以考虑IE专享的setImmediate  最后使用setTimeout\n\nlet timerFunc\nif (Promise) {\n  timerFunc = (cb) => {\n    Promise.resolve().then(cb)\n  }\n} else if (MutationObserver) {\n  let observe = new MutationObserver(cb) // 这里面传入的回调是异步执行的\n  let textNode = document.createTextNode(1)\n  observe.observe(textNode, {\n    characterData: true\n  })\n  timerFunc = () => {\n    textNode.textContent = 2\n  }\n} else if (setImmediate) {\n  timerFunc = () => {\n    setImmediate(cb);\n  }\n} else {\n  timerFunc = () => {\n    setTimeout(cb);\n  }\n}\n\nexport function nextTick (cb) {\n  callbacks.push(cb)  // 维护nextTrick的回调\n  if (!waiting) {\n    waiting = true\n    timerFunc(flushCallBacks) // 最后一起刷新\n  }\n}\n\n\n// 需要给每个属性增加一个dep,目的就是去收集watcher\n\n// 一个视图中 有N个属性 (n个属性会对应这一个视图,也就是n个dnp对应一个watcher) \n// 一个属性还可以对应着多个视图\n// 多对多的关系\nexport default Watcher","import Watcher from \"./observe/watcher\"\nimport { createElementVNode, createTextVNode } from \"../vdom\"\nimport { patch } from \"../vdom/patch\"\n\n\nexport function initLifecycle (Vue) {\n  Vue.prototype._render = function () {\n    const vm = this\n    // 让with的this指向vm\n    // 当渲染的时候就会从实例中去取值,我们就可以将属性和视图绑定在一起\n    return vm.$options.render.call(vm) //将AST语法转译后后生成的render方法\n  }\n\n  //_c('div',{},...children)\n  Vue.prototype._c = function () {\n    return createElementVNode(this, ...arguments)\n  }\n\n  Vue.prototype._v = function () {\n    return createTextVNode(this, ...arguments)\n  }\n\n  Vue.prototype._s = function (value) {\n    if (typeof value !== 'object') return value\n    return JSON.stringify(value)\n  }\n\n  Vue.prototype._update = function (vnode) { // 将vnode转换成真实dom\n    const vm = this\n    const el = vm.$el\n    // patch 既有初始化的功能 又有更新的功能\n    vm.$el = patch(el, vnode)\n  }\n}\n\n\nexport function mountComponent (vm, el) {  // 这里的el是通过querySelector处理过的\n  vm.$el = el\n\n  //1.调用render函数产生虚拟dom\n  // vm._render() // vm.$options.render 生成虚拟节点\n  //2.根据虚拟dom生成真实dom\n  console.log('虚拟dom:', vm._render());\n  const updateComponent = () => {\n    vm._update(vm._render())\n  }\n  const watchers = new Watcher(vm, updateComponent, true) // true用于标识是渲染watcher\n  // console.log(watchers);\n  //3.插入到真实dom\n}\n\n\n\n// Vue核心流程  \n// 1) 创建了响应式数据\n// 2) 模板转换成ast语法树\n// 3) 将ast语法树转换成render函数\n// 4) 后续每次数据更新可以直接执行render函数(无需再次执行ast转换的过程)\n\n\n// render函数会产生虚拟节点(使用响应式数据)\n// 根据生成的虚拟节点创建真实的dom\n\n\n\nexport function callHook (vm, hook) {\n  const handlers = vm.$options[hook]\n  if (handlers) {\n    handlers.forEach(handler => handler.call(vm))\n  }\n}","let oldArrayProto = Array.prototype\n\n\nexport let newArrayProto = Object.create(oldArrayProto)\n\n\nlet methods = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'reverse',\n  'sort'\n]\n\nmethods.forEach(method => {\n  newArrayProto[method] = function (...args) {  // 重写了数组的方法\n    const result = oldArrayProto[method].call(this, ...args)  //内部调用原来的方法\n    //我们需要对新增的数据再进行劫持\n    let inserted\n    const ob = this.__ob__\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args\n        break;\n      case 'splice':\n        inserted = args.slice(2)\n        break\n      default:\n        break;\n    }\n    if (inserted) {//如果有新增的数据 再对他进行劫持\n      ob.observeArray(inserted)\n    }\n    // console.log('新增的内容');\n    ob.dep.notify() // 数组变化了 通知对应的watcher实现更新逻辑\n    return result\n  }\n})","import { newArrayProto } from \"./array\"\nimport Dep from \"./dep\"\n\nclass Observer {\n  constructor(data) {\n    this.dep = new Dep(); // 这里的dep专门为数组设计的\n\n    // object.defineProperty只能劫持已经存在的属性,后增($set)的或者删除($delete)的不会影响\n\n    // 这样不仅给data增加了新的法法,还给数据加了一个标识 如果有这个就说明已经被观察过了\n    Object.defineProperty(data, '__ob__', {\n      value: this,\n      enumerable: false //防止被循环引用\n    })\n\n    if (Array.isArray(data)) {\n\n      //去重写数组的原型\n      Object.setPrototypeOf(data, newArrayProto)\n\n      // 如果数组中放的是对象 也让他去检测到\n      this.observeArray(data)\n    } else {\n      this.walk(data)\n    }\n  }\n  walk (data) { // 循环对象 对属性依次劫持\n    // \"重新定义\"属性 所以性能很差\n    Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\n  }\n  observeArray (data) {\n    data.forEach(item => observe(item))\n  }\n}\n\n// 嵌套就会深层次递归 , 递归多了性能差  不存在属性监控不到,存在的属性要重写方法  所以vue3使用proxy去优化\nfunction dependArray (value) {\n  for (let i = 0; i < value.length; i++) {\n    const current = value[i];\n    current.__ob__ && current.__ob__.dep.depend()\n    if (Array.isArray(current)) {\n      dependArray(current)\n    }\n  }\n}\n\nexport function defineReactive (data, key, value) {  //这个函数是一个闭包\n  let childOb = observe(value) //递归检测 直到是一个简单数据类型为止 childOb 用来收集依赖的\n\n  let dep = new Dep() // 每一个属性都有一个dep用来做依赖收集\n  Object.defineProperty(data, key, {\n    get () {\n      if (Dep.target) {\n        dep.depend() // 让这个属性的收集器记住这个watcher\n        if (childOb) {\n          childOb.dep.depend(); // 让数组和对象本身也实现依赖依赖\n          if (Array.isArray(value)) { // 如果是数组,也让数组的dep做依赖收集\n            dependArray(value)\n          }\n        }\n      }\n      return value\n    },\n    set (newValue) {\n      if (newValue === value) return\n      observe(newValue) //赋值的时候再去做一个递归\n      value = newValue\n      dep.notify()\n    }\n  })\n}\n\nexport function observe (data) {\n  //只对对象和数组进行劫持\n  if (typeof data !== 'object' || data === null) return\n\n  if (data.__ob__ instanceof Observer) { //说明这个对象被代理过了\n    return data.__ob__\n  }\n\n  //标记该对象是否被劫持过(要判断一个对象是否被劫持过,可以添加一个实例,用实例来判断是否被劫持过)\n  return new Observer(data)\n\n}","import Dep from \"./observe/dep\"\nimport { observe } from \"./observe/index\"\nimport Watcher, { nextTick } from \"./observe/watcher\"\n\nexport function initState (vm) {\n  const opts = vm.$options\n  // console.log(opts);\n  // if (opts.props) {\n  //   initProps()\n  // }\n  if (opts.data) {\n    initData(vm)\n  }\n  if (opts.computed) {\n    initComputed(vm)\n  }\n  if (opts.watch) {\n    initWatch(vm)\n  }\n}\n\nfunction proxy (vm, target, key) {\n  Object.defineProperty(vm, key, {\n    get () {\n      return vm[target][key]\n    },\n    set (newValue) {\n      // if (newValue === vm[target][key]) return\n      vm[target][key] = newValue\n    }\n  })\n}\n\nfunction initData (vm) {\n  let data = vm.$options.data\n  data = typeof data === 'function' ? data.call(vm) : data\n\n  vm._data = data\n  observe(data)\n\n  // 将vm._data 用vm来代理就可以直接使用this.xxx访问到data里面的数据\n  for (const key in data) {\n    if (Object.hasOwnProperty.call(data, key)) {\n      proxy(vm, '_data', key)\n    }\n  }\n}\n\n\nfunction initComputed (vm) {\n  const computed = vm.$options.computed\n  let watchers = vm._computedWatchers = {} // 将计算属性watcher保存到vm上\n  for (const key in computed) {\n    let userDef = computed[key]\n\n    const fn = typeof userDef === 'function' ? userDef : userDef.get // 计算属性的get方法\n    // 我们需要监控计算属性中get的变化 ,将属性和watcher关联起来\n    watchers[key] = new Watcher(vm, fn, { lazy: true }) // 如果直接new 就会执行fn,但是我们在计算属性中不需要他立即执行,所以lazy:true\n\n    defineComputed(vm, key, userDef)\n  }\n}\n\nfunction initWatch (vm) {\n  let watch = vm.$options.watch\n  for (const key in watch) { // 字符串 数组 函数\n    const handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (let i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i])\n      }\n    } else {\n      createWatcher(vm, key, handler)\n    }\n  }\n}\n\n\nfunction createWatcher (vm, key, handler) {\n  // 字符串 函数 对象(不写了)\n  if (typeof handler === 'string') {\n    handler = vm[handler]\n  }\n  return vm.$watch(key, handler)\n}\n\nfunction defineComputed (target, key, userDef) {\n  // const getter = typeof userDef === 'function' ? userDef : userDef.get\n  const setter = userDef.set || (() => [])\n\n  // 可以通过实例拿到对应的属性\n  Object.defineProperty(target, key, {\n    get: createComputedGetter(key),\n    set: setter\n  })\n}\n\n// 计算属性根本不会去收集依赖,只会让自己的依赖属性去收集依赖  vue3跟vue2不一样\nfunction createComputedGetter (key) {\n  // 我们要检测是否执行这个getter\n  return function () {\n    const watcher = this._computedWatchers[key] // 获取对应属性的watcher\n    if (watcher.dirty) {\n      // 如果是脏值 就去执行用户传入的函数\n      watcher.evaluate()  // 求值之后 dirty变成了false 下次就不执行了\n      // 并且求值的时候会去执行计算属性的回调函数,此时又会出触发回调里面的data的依赖收集,它此时会把dep全部收集到计算属性watcher的deps上\n    }\n    if (Dep.target) { //计算属性watcher出栈之后,还剩下一个渲染watcher,我们应该让计算属性watcher里面的依赖dep也去收集上一层的渲染watcher\n      watcher.depend()\n    }\n    return watcher.value // 最后返回的是watcher上的值\n  }\n}\n\nexport function initStateMixin (Vue) {\n  Vue.prototype.$nextTick = nextTick\n\n  // 最终调用的都是这个方法\n  Vue.prototype.$watch = function (exprOrFn, cb, options = {}) {\n    // console.log(exprOrFn, cb);\n    // firstName\n    // ()=>vm.firstName\n    // firstName的值变化了 直接执行cb函数\n    new Watcher(this, exprOrFn, { user: true }, cb)\n  }\n}","import { callHook, mountComponent } from './lifecycle'\nimport { compileToTFunction } from './compiler'\nimport { initState } from './state'\nimport { mergeOptions } from './utils'\n\n\nexport function initMixin (Vue) {  // 给vue真假init方法\n  Vue.prototype._init = function (options) { //用于初始化操作\n    const vm = this\n    // v,.$options  就是获取用户的配置\n    // 我们定义的全局指令和过滤器....都会挂载到实例上\n    vm.$options = mergeOptions(this.constructor.options, options) // 将用户的options合并到构造函数的options上\n    callHook(vm, 'beforeCreate')\n\n    //初始化状态\n    initState(vm)\n    callHook(vm, 'created')\n\n\n    if (options.el) {\n      vm.$mount(options.el) //实现数据的挂载\n    }\n  }\n\n  Vue.prototype.$mount = function (el) {\n    const vm = this\n    el = document.querySelector(el)\n    let ops = vm.$options\n    if (!ops.render) {  // 先去查找有没有render,没有render再去查是否写了template,没写template,再才采取外部template\n      let template\n      if (!ops.template && el) { //没有写模板 但是写了el\n        template = el.outerHTML\n      } else {\n        if (el) {\n          template = ops.template\n        }\n      }\n      if (template) {\n        // 对模板进行编译\n        const render = compileToTFunction(template)\n        ops.render = render\n      }\n\n      mountComponent(vm, el) //组件的挂载\n\n\n      // script标签如果引用的是vue.global.js 这个编译过程是在浏览器端的\n      // runtime是不包括把模板编译的,这个编译打包的过程是放在loader去转译.vue文件的,用runtime的时候不能使用template标签\n\n    }\n  }\n}\n\n\n","import { createElm, patch } from '../vdom/patch'\nimport { compileToTFunction } from './compiler'\nimport { initGlobalAPI } from './globalAPI'\nimport { initMixin } from './init'\nimport { initLifecycle } from './lifecycle'\nimport { initStateMixin } from './state'\n\n\n\nfunction Vue (options) {\n  this._init(options)\n}\n\n\n\ninitMixin(Vue) // 扩展了init方法\ninitLifecycle(Vue) //vm._update vm.render\ninitGlobalAPI(Vue) // 全局api的实现\ninitStateMixin(Vue) //实现了nextTick he $watch\n\n// 为了方便观察前后的虚拟节点  测试用的\nlet render1 = compileToTFunction(`<ul style='color:yellow'>\n<li key='a'>a</li>\n<li key='b'>b</li>\n<li key='c'>c</li>\n<li key='d'>d</li>\n</ul>`)\nlet vm1 = new Vue({ data: { name: 'wumao' } })\nlet preVnode = render1.call(vm1)\nconsole.log(preVnode);\n\nlet el = createElm(preVnode)\ndocument.body.appendChild(el)\n\n\n// 如果用户自己操作dom  可能会有些问题 比如性能浪费\nlet render2 = compileToTFunction(`<ul style='background:red'>\n<li key='d'>d</li>\n<li key='c'>c</li>\n<li key='a'>a</li>\n<li key='b'>b</li>\n</ul>`)\nlet vm2 = new Vue({ data: { name: '9999' } })\nlet nextVnode = render2.call(vm2)\nconsole.log(nextVnode)\nlet newEl = createElm(nextVnode)\n\n\n// 所以我们需要比较两个的区别之后并且进行替换\n//  diff算法是一个平级比较的过程  父亲和父亲比对 儿子和儿子去比对 (因为很少有跨层级比对)\nsetTimeout(() => {\n  patch(preVnode, nextVnode)\n}, 2000);\n\n\n\nexport default Vue"],"names":["createElementVNode","vm","tag","data","key","children","vnode","createTextVNode","text","undefined","isSameVnode","vnode1","vnode2","createElm","el","document","createElement","patchProps","forEach","child","appendChild","createTextNode","oldProps","props","oldStyles","style","newStyles","removeAttribute","styleName","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","patchVnode","replaceChild","textContent","oldChildren","newChildren","length","updateChildren","mountChildren","unMountChildren","i","innerText","lastElementChild","oldStartIndex","newStartIndex","oldEndIndex","newEndIndex","oldStartVnode","newStartVnode","oldEndVnode","newEndVnode","makeIndexByKey","map","index","console","log","moveIndex","moveVnode","childEl","anchor","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","textEnd","indexOf","startTagMatch","parseStartTag","start","tagName","attrs","endTagMatch","match","advance","end","substring","chars","createASTElement","type","parent","node","push","replace","pop","at","n","name","value","genProps","str","o","attr","obj","split","item","JSON","stringify","slice","genChildren","c","gen","join","defaultTagRE","genCode","test","lastIndex","tokens","exec","trim","ast","code","compileToTFunction","template","render","Function","strats","LIFECYCLE","hook","p","concat","mergeOptions","options","mergeFiled","hasOwnProperty","initGlobalAPI","Vue","mixin","id","Dep","subs","target","addDep","watcher","update","pushTarget","popTarget","Watcher","exprOrFn","cb","renderWatcher","getter","deps","depsId","Set","lazy","dirty","user","get","call","dep","has","add","addSub","depend","queueWatcher","oldValue","newValue","queue","pending","flushSchedulerQueue","flushQueue","q","run","nextTick","callbacks","waiting","flushCallBacks","cbs","timerFunc","Promise","resolve","then","MutationObserver","observe","textNode","characterData","setImmediate","setTimeout","initLifecycle","prototype","_render","$options","_c","arguments","_v","_s","_update","$el","mountComponent","updateComponent","callHook","handlers","handler","oldArrayProto","Array","newArrayProto","Object","create","methods","method","args","result","inserted","ob","__ob__","observeArray","notify","Observer","defineProperty","enumerable","isArray","setPrototypeOf","walk","keys","defineReactive","dependArray","current","childOb","set","initState","opts","initData","computed","initComputed","watch","initWatch","proxy","_data","watchers","_computedWatchers","userDef","fn","defineComputed","createWatcher","$watch","setter","createComputedGetter","evaluate","initStateMixin","$nextTick","initMixin","_init","constructor","$mount","querySelector","ops","outerHTML","render1","vm1","preVnode","body","render2","vm2","nextVnode"],"mappings":"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"}